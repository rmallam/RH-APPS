---
#tasks file for amq
- name: Create amq project
  k8s:
    host: "{{ api_url }}"
    api_key: "{{ auth_output.k8s_auth.api_key }}"
    api_version: v1
    state: present
    kind: Namespace
    name: "{{ project_name }}"

- name: Create an operator group
  k8s:
    host: "{{ api_url }}"
    api_key: "{{ auth_output.k8s_auth.api_key }}"
    state: present
    merge_type: merge
    name: amq-operator
    namespace: "{{ project_name }}"
    api_version: operators.coreos.com/v1
    definition:
      kind: OperatorGroup
      spec:
        targetNamespaces:
          - "{{ project_name }}"

- name: Create a amq operator subscription
  k8s:
    host: "{{ api_url }}"
    api_key: "{{ auth_output.k8s_auth.api_key }}"
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: amq-streams
        namespace: "{{ project_name }}"
      spec:
        channel: stable
        installPlanApproval: Automatic
        name: amq-streams
        source: redhat-operators
        sourceNamespace: openshift-marketplace
        startingCSV: amqstreams.v1.6.2

- name: Create a custom resource for kafka cluster
  k8s:
    host: "{{ api_url }}"
    api_key: "{{ auth_output.k8s_auth.api_key }}"
    api_version: kafka.strimzi.io/v1beta1
    state: present
    kind: Kafka
    merge_type: merge
    name: "{{ kafka_cluster_name }}"
    namespace: "{{ project_name }}"
    definition: 
      spec:
        kafka:
          config:
            offsets.topic.replication.factor: 3
            transaction.state.log.replication.factor: 3
            transaction.state.log.min.isr: 2
            log.message.format.version: '2.6'
            inter.broker.protocol.version: '2.6'
          version: 2.6.0
          storage:
            type: ephemeral
          replicas: 3
          listeners:
            - name: plain
              port: 9092
              type: internal
              tls: false
            - name: tls
              port: 9093
              type: internal
              tls: true
        entityOperator:
          topicOperator: {}
          userOperator: {}
        zookeeper:
          storage:
            type: ephemeral
          replicas: 3

- name: Create a custom resource for topic
  k8s:
    host: "{{ api_url }}"
    api_key: "{{ auth_output.k8s_auth.api_key }}"
    api_version: kafka.strimzi.io/v1beta1
    definition:
      api_version: kafka.strimzi.io/v1beta1
      kind: KafkaTopic
      metadata:
        name: "{{ kafka_topic_name }}"
        namespace: "{{ project_name }}"
        labels:
          strimzi.io/cluster: "{{ kafka_cluster_name }}"
      spec:
        config:
          retention.ms: 604800000
          segment.bytes: 1073741824
        partitions: 10
        replicas: 3
